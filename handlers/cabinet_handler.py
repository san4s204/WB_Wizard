from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
import datetime

from utils.logger import logger
from db.database import SessionLocal
from db.models import User
from core.wildberries_api import get_seller_info  # —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –ø—É–Ω–∫—Ç–∞ 1
from core.sub import get_user_role  

async def cmd_cabinet(message: types.Message, user_id: int = None):
    """
    –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è "/cabinet". –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:
    - –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–∑ WB API)
    - –¢–∞—Ä–∏—Ñ (–ø–æ–∫–∞ "–¢–µ—Å—Ç–æ–≤—ã–π")
    - –°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ (–ø–æ–∫–∞ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ, –Ω–∞–ø—Ä. –¥–æ 20.02.2025)
    –ò –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫ (–ü–æ–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã, –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ., –û—Ç—á—ë—Ç—ã, –ù–∞—Å—Ç—Ä–æ–π–∫–∏).
    """
    # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.delete()

    if user_id is None:
        # –ó–Ω–∞—á–∏—Ç –≤—ã–∑–≤–∞–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –∫–æ–º–∞–Ω–¥–æ–π /cabinet, –±–µ—Ä—ë–º message.from_user.id
        user_id = message.from_user.id

     # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é, –∏—â–µ–º user
    session = SessionLocal()
    db_user = session.query(User).filter_by(telegram_id=str(user_id)).first()
    if not db_user:
        session.close()
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start.")
        return

    token_obj = db_user.token
    if not token_obj:
        session.close()
        await message.answer("–£ –≤–∞—Å –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω —Ç–æ–∫–µ–Ω. –°–Ω–∞—á–∞–ª–∞ /start.")
        return

    user_token_value = token_obj.token_value  # –°–∞–º token string
    tariff = get_user_role(session, db_user)  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'free','base','advanced','test','super' –∏ —Ç.–¥.
    subscription_until = token_obj.subscription_until

    # –ë–µ—Ä—ë–º store_link –∏–∑ –ë–î (–º–æ–∂–µ—Ç –±—ã—Ç—å None, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω)
    store_link = db_user.store_link or ""
    tariff = get_user_role(session, db_user)  # —Ä–æ–ª—å —Ç–æ–∫–µ–Ω–∞

    session.close()

    # 1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —á–µ—Ä–µ–∑ get_seller_info
    try:
        seller_data = get_seller_info(user_token_value)
        store_name = seller_data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞: {e}")
        store_name = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ"

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞, –¥–µ–ª–∞–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É
    # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º store_name
    if store_link:
        store_label = f"<a href='{store_link}'>{store_name}</a>"
    else:
        store_label = store_name  # –±–µ–∑ —Å—Å—ã–ª–∫–∏




    # 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = (
        f"üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n"
        f"–ú–∞–≥–∞–∑–∏–Ω: {store_label}\n"
        f"–¢–∞—Ä–∏—Ñ: {tariff}\n"
        f"–î–æ—Å—Ç—É–ø –¥–æ {subscription_until.strftime('%d.%m.%Y %H:%M:%S')}"
    )

    # 4. –§–æ—Ä–º–∏—Ä—É–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    #    –ü—Ä–∏–º–µ—Ä: 4 –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
    kb_builder = InlineKeyboardBuilder()
    kb_builder.button(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤", callback_data="orders")
    kb_builder.button(text="C–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç", callback_data="my_products")
    kb_builder.button(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help")
    kb_builder.button(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    kb_builder.adjust(2)  # –ø–æ 2 –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        text,
        parse_mode="HTML",
        reply_markup=kb_builder.as_markup()
    )

def register_cabinet_handler(dp: Dispatcher):
    dp.message.register(cmd_cabinet, Command("cabinet"))
