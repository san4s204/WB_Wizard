# start_handler.py
from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import CallbackQuery
from db.database import SessionLocal
from db.models import User, Token
from states.token_state import TokenState
from core.payments import refresh_payment_and_activate

WB_API_INTEGRATIONS_URL = "https://seller.wildberries.ru/api-integrations"  # ‚Üê –¥–æ–±–∞–≤–∏–ª–∏

SAFETY_TEXT = (
    "<b>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b>\n\n"
    "1Ô∏è‚É£ –ù–∞—à –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à API-—Ç–æ–∫–µ–Ω –ª–∏—à—å –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Ç.–¥.\n"
    "2Ô∏è‚É£ –û–Ω –Ω–µ —É–º–µ–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ü–µ–Ω—ã, –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É.\n"
    "3Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–æ–∑–≤–∞—Ç—å –∫–ª—é—á –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Wildberries.\n"
    "4Ô∏è‚É£ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n\n"
    "‚öôÔ∏è –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n\n"
    "‚Ä¢ üõç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤, –≤—ã–∫—É–ø–æ–≤, –æ—Ç–∫–∞–∑–æ–≤\n"
    "‚Ä¢ üöö –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–µ\n"
    "‚Ä¢ üîé –ü–æ–∏—Å–∫ –ø–æ–∑–∏—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É\n"
    "‚Ä¢ üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ Excel\n"
    "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ (—Å–º. /tariffs)\n\n"
    "–ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äì –Ω–∞–ø–∏—à–∏—Ç–µ /help, –º—ã –Ω–∞ —Å–≤—è–∑–∏üôå"
)

async def cmd_start(message: types.Message, state: FSMContext):
    # ---- –ë–õ–û–ö deep-link: /start paid_123 ----
    txt = message.text or ""
    arg = ""
    parts = txt.split(maxsplit=1)
    if len(parts) > 1:
        arg = parts[1].strip()

    if arg.startswith("paid"):
        payment_db_id = None
        if "_" in arg:
            tail = arg.split("_", 1)[1]
            if tail.isdigit():
                payment_db_id = int(tail)

        res = refresh_payment_and_activate(payment_db_id=payment_db_id)
        status = res.get("status")
        if status == "succeeded":
            until = res.get("token_until")
            role = res.get("role")
            await message.answer(
                "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n"
                f"–¢–∞—Ä–∏—Ñ: <b>{role}</b>\n"
                f"–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: <code>{until}</code>\n\n"
                "–ö–æ–º–∞–Ω–¥—ã: /help /tariffs",
                parse_mode="HTML"
            )
            return
        elif status == "canceled":
            await message.answer("üö´ –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞: /tariffs")
            return
        else:
            await message.answer("–ü–ª–∞—Ç—ë–∂ –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –í–µ—Ä–Ω–∏—Å—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –∫–Ω–æ–ø–∫–æ–π ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É¬ª –∏–ª–∏ –æ—Ç–∫—Ä–æ–π /tariffs.")
            return
    # ---- –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ deep-link ----

    await message.delete()

    session = SessionLocal()
    db_user = session.query(User).filter_by(telegram_id=str(message.from_user.id)).first()

    if not db_user:
        db_user = User(telegram_id=str(message.from_user.id), subscription_until=None, token_id=None)
        session.add(db_user)
        session.commit()

    if db_user.token_id is not None:
        token_obj = session.query(Token).get(db_user.token_id)
        kb_builder = InlineKeyboardBuilder()
        # ‚Üì‚Üì‚Üì –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
        kb_builder.button(text="–°–æ–∑–¥–∞—Ç—å API-–∫–ª—é—á üîë", url=WB_API_INTEGRATIONS_URL)
        kb_builder.button(text="–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?", callback_data="is_safe")
        kb_builder.adjust(1)

        if token_obj is None:
            db_user.token_id = None
            session.commit()
            await message.answer(
                "–£ –≤–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API-–∫–ª—é—á –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ —Å—é–¥–∞.",
                reply_markup=kb_builder.as_markup()
            )
            await state.set_state(TokenState.waiting_for_token)
        else:
            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç! –Ø WB Wizard. –†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.\n"
                "–ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å /cabinet –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ /settings!\n\n"
                "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–µ—à—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π API-–∫–ª—é—á –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.",
                reply_markup=kb_builder.as_markup()
            )
    else:
        # –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ ‚Äî –ø—Ä–æ—Å–∏–º —Å–æ–∑–¥–∞—Ç—å –∏ –ø—Ä–∏—Å–ª–∞—Ç—å
        kb_builder = InlineKeyboardBuilder()
        kb_builder.button(text="–°–æ–∑–¥–∞—Ç—å API-–∫–ª—é—á üîë", url=WB_API_INTEGRATIONS_URL)  # ‚Üê –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        kb_builder.button(text="–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?", callback_data="is_safe")
        kb_builder.adjust(1)

        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –Ø WB Wizard.\n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å API-–∫–ª—é—á üîë\n"
            "–ú–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —à–∞–≥–∏ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n\n"
            "1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç Wildberries\n"
            "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–î–æ—Å—Ç—É–ø –∫ API¬ª\n"
            "3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª—ã: –ö–æ–Ω—Ç–µ–Ω—Ç, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞, –í–æ–∑–≤—Ä–∞—Ç—ã, –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –§–∏–Ω–∞–Ω—Å—ã, –ü–æ—Å—Ç–∞–≤–∫–∏\n"
            "4Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞\n\n"
            "üõ°Ô∏è –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–µ—Ä–≤–∏—Å–∞:\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/15LRh3AoPaXp3CzibhF_uP54L_5aLBLBH/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã</a>\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/1mHECWvSwUoqEb3W4xP_a8pBqUHIQkFzp/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/1qSEui2LOjZ_0pJ12UwHra9FQh-lkHIMG/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>\n\n"
            "–û—Ç–ø—Ä–∞–≤–ª—è—è –∫–ª—é—á, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –æ—Ñ–µ—Ä—Ç—ã, –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
            reply_markup=kb_builder.as_markup(),
            parse_mode="HTML"
        )
        await state.set_state(TokenState.waiting_for_token)

    session.close()

async def callback_is_safe(query: CallbackQuery):
    await query.message.answer(SAFETY_TEXT, parse_mode="HTML")
    await query.answer()

def register_start_handler(dp: Dispatcher):
    dp.message.register(cmd_start, Command("start"))
    dp.callback_query.register(callback_is_safe, lambda c: c.data == "is_safe")
