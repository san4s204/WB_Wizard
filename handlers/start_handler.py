import datetime
from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogram.types import CallbackQuery
from db.database import SessionLocal
from db.models import User, Token
from states.token_state import TokenState

SAFETY_TEXT = (
    "<b>üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b>\n\n"
    "1Ô∏è‚É£ –ù–∞—à –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à API-—Ç–æ–∫–µ–Ω –ª–∏—à—å –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Ç.–¥.\n"
    "2Ô∏è‚É£ –û–Ω –Ω–µ —É–º–µ–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ü–µ–Ω—ã, –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É.\n"
    "3Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–æ–∑–≤–∞—Ç—å –∫–ª—é—á –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Wildberries.\n"
    "4Ô∏è‚É£ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n\n"

    "‚öôÔ∏è –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n\n"
    "‚Ä¢ üõç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤, –≤—ã–∫—É–ø–æ–≤, –æ—Ç–∫–∞–∑–æ–≤\n"
    "‚Ä¢ üöö –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–µ\n"
    "‚Ä¢ üîé –ü–æ–∏—Å–∫ –ø–æ–∑–∏—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É\n"
    "‚Ä¢ üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ Excel\n"
    "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ (—Å–º. /tariffs)\n\n"

    "–ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äì –Ω–∞–ø–∏—à–∏—Ç–µ /help, –º—ã –Ω–∞ —Å–≤—è–∑–∏üôå"
)

async def cmd_start(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ /start.
    –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π WB-—Ç–æ–∫–µ–Ω (—á–µ—Ä–µ–∑ token_id).
    –ï—Å–ª–∏ –Ω–µ—Ç, –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.
    """
    session = SessionLocal()

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id
    db_user = session.query(User).filter_by(telegram_id=str(message.from_user.id)).first()

    if not db_user:
        # –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å User (token_id=None –∑–Ω–∞—á–∏—Ç –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞)
        db_user = User(
            telegram_id=str(message.from_user.id),
            subscription_until=None,
            token_id=None
        )
        session.add(db_user)
        session.commit()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è token_id
    if db_user.token_id is not None:
        # –î–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ Token –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        token_obj = session.query(Token).get(db_user.token_id)
        if token_obj is None:
            # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ token_id "–±–∏—Ç—ã–π"
            db_user.token_id = None
            session.commit()
            # –ü—Ä–æ—Å–∏–º –∑–∞–Ω–æ–≤–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Ç–æ–∫–µ–Ω
            kb_builder = InlineKeyboardBuilder()
            kb_builder.button(text="–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?", callback_data="is_safe")
            kb_builder.adjust(1)

            await message.answer(
                "–£ –≤–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à WB-—Ç–æ–∫–µ–Ω.",
                reply_markup=kb_builder.as_markup()
            )
            await state.set_state(TokenState.waiting_for_token)
        else:
            # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å token
            kb_builder = InlineKeyboardBuilder()
            kb_builder.button(text="–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?", callback_data="is_safe")
            kb_builder.adjust(1)

            await message.answer(
                "–ü—Ä–∏–≤–µ—Ç! –Ø WB Wizard. –†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.\n"
                "–ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å /cabinet –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ /settings!",
                reply_markup=kb_builder.as_markup()
            )
    else:
        # –ï—Å–ª–∏ token_id –Ω–µ—Ç - –ø—Ä–æ—Å–∏–º –ø—Ä–∏—Å–ª–∞—Ç—å —Ç–æ–∫–µ–Ω
        kb_builder = InlineKeyboardBuilder()
        kb_builder.button(text="–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?", callback_data="is_safe")
        kb_builder.adjust(1)

        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –Ø WB Wizard.\n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å API-–∫–ª—é—á üîë\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∏–∂–µ üëá\n\n"
            "1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç Wildberries\n"
            "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–î–æ—Å—Ç—É–ø –∫ API¬ª\n"
            "3Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞\n\n"
            "üõ°Ô∏è –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–µ—Ä–≤–∏—Å–∞:\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/15LRh3AoPaXp3CzibhF_uP54L_5aLBLBH/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã</a>\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/1mHECWvSwUoqEb3W4xP_a8pBqUHIQkFzp/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>\n"
            "‚Ä¢ <a href='https://docs.google.com/document/d/1qSEui2LOjZ_0pJ12UwHra9FQh-lkHIMG/edit?usp=sharing&ouid=114073113894104131349&rtpof=true&sd=true'>–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>\n\n"
            "–û—Ç–ø—Ä–∞–≤–ª—è—è –∫–ª—é—á, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—Å–ª–æ–≤–∏—è –æ—Ñ–µ—Ä—Ç—ã, –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
            reply_markup=kb_builder.as_markup()
        )
        await state.set_state(TokenState.waiting_for_token)

    session.close()

async def callback_is_safe(query: CallbackQuery):
    """
    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–º—ë—Ç –∫–Ω–æ–ø–∫—É "–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?",
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.
    """
    await query.message.answer(SAFETY_TEXT, parse_mode="HTML")
    await query.answer()

def register_start_handler(dp: Dispatcher):
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é cmd_start –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    dp.message.register(cmd_start, Command("start"))
    dp.callback_query.register(callback_is_safe, lambda c: c.data == "is_safe")