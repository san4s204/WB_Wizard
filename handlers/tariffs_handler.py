from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

# TODO: –≤—Å—Ç–∞–≤—å —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏, —Å–µ–π—á–∞—Å –ø—É—Å—Ç–æ
BASE_PAYMENT_URL = ""      # –Ω–∞–ø—Ä–∏–º–µ—Ä: "https://your-pay.page/base"
ADV_PAYMENT_URL  = ""      # –Ω–∞–ø—Ä–∏–º–µ—Ä: "https://your-pay.page/advanced"

async def cmd_tariffs(message: types.Message):
    """
    –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º (free, base, advanced, test) + —Ü–µ–Ω—ã.
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã Base –∏ Advanced.
    """
    text = (
        "<b>–¢–∞—Ä–∏—Ñ—ã –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</b>\n\n"

        "1. <b>Free</b> üÜì\n"
        "   ‚Ä¢ üõç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤, –≤—ã–∫—É–ø–æ–≤, –æ—Ç–∫–∞–∑–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤\n"
        "   ‚Ä¢ üè¨ –ü–æ–¥–ø–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ 1 —Å–∫–ª–∞–¥ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞)\n"
        "   ‚Ä¢ üåê –ü–æ–∑–∏—Ü–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –∫–ª—é—á–µ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É (1 –≥–æ—Ä–æ–¥)\n"
        "   ‚Ä¢ üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 7 –¥–Ω–µ–π\n\n"

        "2. <b>Base</b> üîë ‚Äî <b>349 ‚ÇΩ/–º–µ—Å</b>\n"
        "   ‚Ä¢ –í—Å—ë –∏–∑ Free, –ø–ª—é—Å:\n"
        "   ‚Ä¢ üöö –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∏ –≤—ã–∫—É–ø–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ 30 –¥–Ω–µ–π\n"
        "   ‚Ä¢ üè¨ –î–æ 3 —Å–∫–ª–∞–¥–æ–≤ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞)\n"
        "   ‚Ä¢ üìà –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (Excel) –¥–æ 30 –¥–Ω–µ–π\n\n"

        "3. <b>Advanced</b> üöÄ ‚Äî <b>949 ‚ÇΩ/–º–µ—Å</b>\n"
        "   ‚Ä¢ –í—Å—ë –∏–∑ Base, –ø–ª—é—Å:\n"
        "   ‚Ä¢ ‚è≥ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –¥–æ 90 –¥–Ω–µ–π\n"
        "   ‚Ä¢ üè¨ –î–æ 9 —Å–∫–ª–∞–¥–æ–≤ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞)\n"
        "   ‚Ä¢ üåê –ü–æ–∑–∏—Ü–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ 20 –≥–æ—Ä–æ–¥–∞–º (Excel)\n"
        "   ‚Ä¢ üîë –í–∞—à–∏ –∫–ª—é—á–∏ –∏ –∏—Ö —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å (Excel)\n"
        "   ‚Ä¢ üó∫ –ö–æ–Ω—Ç—Ä–æ–ª—å –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º (Excel)\n"
        "   ‚Ä¢ üìë –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–∞ —Å—Ä–∞–∑—É –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö Excel-—Ç–∞–±–ª–∏—Ü–∞—Ö\n\n"

        "4. <b>Test</b> üß™\n"
        "   ‚Ä¢ –¢–∞—Ä–∏—Ñ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º —É—Ä–æ–≤–Ω—è Advanced –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è\n"
        "   ‚Ä¢ üè¨ –î–æ 9 —Å–∫–ª–∞–¥–æ–≤ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞)\n\n"

        "<b>–û–±—â–µ–µ –¥–ª—è –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–æ–≤:</b>\n"
        "   ‚Ä¢ ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)\n"
        "   ‚Ä¢ ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É\n"
        "   ‚Ä¢ ‚úÖ –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã –≤ Excel\n"
        "   ‚Ä¢ ‚úÖ –û–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ—á—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n\n"
        "–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –≤ <b>/help</b> ü§ù"
    )

    kb = InlineKeyboardBuilder()
    if BASE_PAYMENT_URL:
        kb.button(text="–û–ø–ª–∞—Ç–∏—Ç—å Base ‚Äî 349 ‚ÇΩ", url=BASE_PAYMENT_URL)
    else:
        kb.button(text="–û–ø–ª–∞—Ç–∏—Ç—å Base ‚Äî 349 ‚ÇΩ", callback_data="pay_base")

    if ADV_PAYMENT_URL:
        kb.button(text="–û–ø–ª–∞—Ç–∏—Ç—å Advanced ‚Äî 949 ‚ÇΩ", url=ADV_PAYMENT_URL)
    else:
        kb.button(text="–û–ø–ª–∞—Ç–∏—Ç—å Advanced ‚Äî 949 ‚ÇΩ", callback_data="pay_advanced")

    kb.adjust(1)  # –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    await message.answer(text, reply_markup=kb.as_markup(), parse_mode="HTML")


# –ö–æ–ª–±—ç–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –µ—â—ë –Ω–µ –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω—ã
async def callback_pay_base(query: types.CallbackQuery):
    if BASE_PAYMENT_URL:
        await query.message.answer(f"–û–ø–ª–∞—Ç–∞ Base: {BASE_PAYMENT_URL}")
    else:
        await query.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞—Ä–∏—Ñ–∞ Base –ø–æ—è–≤–∏—Ç—Å—è —Å–∫–æ—Ä–æ üôå", show_alert=True)

async def callback_pay_advanced(query: types.CallbackQuery):
    if ADV_PAYMENT_URL:
        await query.message.answer(f"–û–ø–ª–∞—Ç–∞ Advanced: {ADV_PAYMENT_URL}")
    else:
        await query.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞—Ä–∏—Ñ–∞ Advanced –ø–æ—è–≤–∏—Ç—Å—è —Å–∫–æ—Ä–æ üöÄ", show_alert=True)


def register_tariffs_handler(dp: Dispatcher):
    dp.message.register(cmd_tariffs, Command("tariffs"))
    dp.callback_query.register(callback_pay_base, lambda c: c.data == "pay_base")
    dp.callback_query.register(callback_pay_advanced, lambda c: c.data == "pay_advanced")
